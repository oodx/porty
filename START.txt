================================================================================
 🚀 PORTY - START HERE
================================================================================

👋 **Welcome to Porty Development!**

📋 **Single Entry Point**: Read docs/procs/PROCESS.txt for complete workflow

🎯 **Quick Start** (5 minutes to productive work):
1. Read docs/procs/PROCESS.txt ← Master workflow guide (3 min read)
2. Read docs/procs/CONTINUE.md ← Current session status (1 min read)
3. Read docs/procs/SPRINT.txt ← Active tasks (1 min read)
4. Begin work with full context

⚡ **Ultra-Fast Start** (30 seconds):
→ Read docs/procs/QUICK_REF.txt for essential context only

🔍 **System Health Check**:
→ Run ./bin/validate-docs.sh to verify documentation integrity

📁 **All Process Documents Located in docs/procs/**
🔄 **Self-Hydrating System**: No manual context reconstruction needed!

================================================================================
 🔧 PORTY PROJECT OVERVIEW
================================================================================

Porty is a high-performance TCP/HTTP port forwarder and dynamic proxy built with
Rust, Tokio, and the RSB framework. Features dynamic HTTP routing via query
parameters, enabling runtime backend selection without configuration changes.

🎯 **Key Features**:
- Dynamic HTTP routing with query parameters
- Multi-protocol support (TCP + HTTP)
- Zero-configuration proxy capabilities
- RSB framework integration

🏗️ **Quick Commands**:
- cargo run --release                 # Run with config.toml
- cargo run --release -- --help       # View all options
- ./bin/validate-docs.sh              # Validate documentation
- ./target/release/porty --generate-config  # Create example config

================================================================================